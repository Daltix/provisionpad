#!/usr/bin/env python

# from provisionpad.runs import *

import sys
import argparse
from provisionpad.db.database import load_database
from provisionpad.runs.create_instance import create_instance
from provisionpad.runs.terminate_instance import terminate_instance
from provisionpad.runs.stop_instance import stop_instance
from provisionpad.runs.start_instance import start_instance

parser = argparse.ArgumentParser(description='A function to create instance', 
                                    usage='%(prog)s [OPTIONS]')
parser.add_argument("command")
parser.add_argument("-n", "--name", dest="boxname", default="", 
                    help="Enter the name of the sandbox:")
parser.add_argument("-t", "--type", dest="boxtype", default="t2.micro", 
                    help="The type of instance. For example for ec2 t2.micro blah blah")

args = parser.parse_args()
command = args.command
boxname = args.boxname
boxtype = args.boxtype


if command=='create':
    print (boxname, boxtype, command)
    DB = load_database()
    create_instance(boxname, boxtype, DB)
elif command == 'terminate':
    if not boxname:
        print('Please enter the name of the box you want to remove')
        sys.exit()
    DB = load_database()
    terminate_instance(boxname, DB)
elif command == 'stop':
    if not boxname:
        print('Please enter the name of the box you want to remove')
        sys.exit()
    DB = load_database()
    stop_instance(boxname, DB)
elif command == 'start':
    if not boxname:
        print('Please enter the name of the box you want to remove')
        sys.exit()
    DB = load_database()
    start_instance(boxname, DB)
