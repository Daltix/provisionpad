#!/usr/bin/env python

# from provisionpad.runs import *

import sys
import os
import argparse
import json
from provisionpad.db.database import load_database
from provisionpad.runs.create_instance import create_instance
from provisionpad.runs.terminate_instance import terminate_instance
from provisionpad.runs.stop_instance import stop_instance
from provisionpad.runs.start_instance import start_instance
from provisionpad.runs.create_vpc import create_vpc
from provisionpad.runs.initiate import initiate

parser = argparse.ArgumentParser(description='A function to create instance', 
                                    usage='%(prog)s [OPTIONS]')
parser.add_argument("command")
parser.add_argument("-n", "--name", dest="boxname", default="", 
                    help="Enter the name of the sandbox:")
parser.add_argument("-t", "--type", dest="boxtype", default="t2.micro", 
                    help="The type of instance. For example for ec2 t2.micro blah blah")

args = parser.parse_args()
command = args.command
boxname = args.boxname
boxtype = args.boxtype


if command != 'initiate':
    home = os.path.expanduser("~")
    env_dir = os.path.join(home, '.provisionpad') 
    env_var_path = os.path.join(env_dir, 'env_variable.json')
    with open(env_var_path, 'r') as f:
        env_vars = json.load(f)
        if env_vars['env_path'] != env_var_path:
            print ('something wrong')
            sys.exit()
    env_vars = {str(key):str(val) for key, val in env_vars.items()}



# this part logically does not make sense as initiate does not get the path to env variables
# Needs to be fixed -- Amir
if command=='initiate':
    initiate()
elif command=='create':
    print (boxname, boxtype, command)
    DB = load_database(env_vars['db_path'])
    print (DB)
    create_instance(boxname, boxtype, env_vars, DB)
elif command == 'terminate':
    if not boxname:
        print('Please enter the name of the box you want to remove')
        sys.exit()
    DB = load_database(env_vars['db_path'])
    terminate_instance(boxname, env_vars, DB)
elif command == 'stop':
    if not boxname:
        print('Please enter the name of the box you want to remove')
        sys.exit()
    DB = load_database()
    stop_instance(boxname, DB)
elif command == 'start':
    if not boxname:
        print('Please enter the name of the box you want to remove')
        sys.exit()
    DB = load_database()
    start_instance(boxname, DB)
